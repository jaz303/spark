{
    "code": [
        "// these variables control the size of",
        "// each ball the amount by which the size",
        "// changes each time loop() runs",
        "var size = 2, delta = 0.05;",
        "",
        "// initial position of mouse is (0,0)",
        "var lastX = 0, lastY = 0;",
        "",
        "// mouse move handler updates the ",
        "// lastX and lastY values each time",
        "// the mouse moves. we use these values",
        "// inside the loop() function to work",
        "// out the distance between the mouse",
        "// and each ball.",
        "function mouseMove(x, y) {",
        "    lastX = x;",
        "    lastY = y;",
        "}",
        "",
        "function loop() {",
        "    clear();",
        "    ",
        "    // adjust the size of the balls",
        "    size = size + delta;",
        "    ",
        "    ctx.save();",
        "    ",
        "    var i = 0;",
        "    while (i < balls.length) {",
        "        ",
        "        // take a single ball out of the array",
        "        // to draw",
        "        var ball = balls[i];",
        "        ",
        "        // use the sin() function to tween the",
        "        // ball size. try playing about with",
        "        // the numbers 5 and 4 to see different",
        "        // effects",
        "        var ballSize = sin(size) + 5;",
        "        ballSize = ballSize * 4;",
        "        ",
        "        // calculate the distance between the",
        "        // mouse position (lastX and lastY) and",
        "        // the ball's center (ball.x, ball.y)",
        "        //",
        "        // the key thing to notice here is that",
        "        // because this distance is calculated based",
        "        // on the mouse position, it is dependent",
        "        // on user input.",
        "        var d = distance(lastX, lastY, ball.x, ball.y);",
        "        ",
        "        // modify the ball size based on mouse distance.",
        "        // I guessed these numbers! don't be afraid",
        "        // to experiment.",
        "        ballSize = ballSize * (sin(d / 100) + 1);",
        "        ",
        "        // use the distance we just calculated to",
        "        // generate the fill color for this ball",
        "        fill(hsl(d, 0.5, 0.5));",
        "        ",
        "        // finally, draw the ball",
        "        circle(ball.x, ball.y, ballSize);",
        "        ",
        "        i = i + 1;",
        "    ",
        "    }",
        "    ",
        "    ctx.restore();",
        "}",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "//",
        "// ignore everything below here!",
        "",
        "var balls;",
        "",
        "function distance(x1, y1, x2, y2) {",
        "    return sqrt(sq(x2-x1) + sq(y2-y1));",
        "}",
        "",
        "function setup() {",
        "    balls = [];",
        "    ",
        "    var rows = 10, cols = 10, spacing = 40;",
        "    ",
        "    var w = (cols - 1) * spacing;",
        "    var h = (rows - 1) * spacing;",
        "    ",
        "    var y = height/2 - h/2;",
        "    for (var i = 0; i < rows; ++i) {",
        "        var x = width/2 -w/2;",
        "        for (var j = 0; j < cols; ++j) {",
        "            balls.push({ x: x, y: y });",
        "            x += spacing;",
        "        }",
        "        y += spacing;",
        "    }",
        "}"
    ],
    "mode_id": "sketch"
}